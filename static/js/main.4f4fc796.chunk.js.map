{"version":3,"sources":["firebase.js","StateProvider.js","reducer.js","Login.js","SidebarChat.js","Sidebar.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","user","Login","dispatch","className","src","alt","Button","onClick","signInWithPopup","then","result","catch","error","alert","message","SidebarChat","id","name","addNewChat","useState","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","seed","setSeed","Math","floor","random","roomName","prompt","add","to","Avatar","Sidebar","rooms","setRooms","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toLocaleDateString","hour","minute","hour12","AttachFile","displayName","onChange","e","target","preventDefault","FieldValue","serverTimestamp","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f4fc796.chunk.js","sourcesContent":["\r\nimport firebase from 'firebase';\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyDkzv_c8Vz7rzRkrFFcDOTz9KdbTF6Fg4c\",\r\n    authDomain: \"whatsapp2-f48bf.firebaseapp.com\",\r\n    projectId: \"whatsapp2-f48bf\",\r\n    storageBucket: \"whatsapp2-f48bf.appspot.com\",\r\n    messagingSenderId: \"1024630025235\",\r\n    appId: \"1:1024630025235:web:e137d0a7aa2b6b6e9a23e6\"\r\n  };\r\n\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  \r\n  const db = firebaseApp.firestore();\r\n\r\n  const auth = firebase.auth();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth,provider};\r\n\r\n  export default db;\r\n","import { createContext, useContext, useReducer } from \"react\";\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer,initialState, children})=>(\r\n    <StateContext.Provider value= {useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue =() => useContext(StateContext);\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        case actionTypes.SET_USER:\r\n            return{\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer","import React from 'react';\r\nimport \"./login.css\";\r\nimport { Button } from '@material-ui/core';\r\nimport { auth, provider } from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nfunction Login() {\r\n\r\n        const [{}, dispatch] = useStateValue();\r\n\r\n        const signIn = () => {\r\n            auth.signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n        };\r\n\r\n    return (\r\n        <div className= \"login\">\r\n            <div className=\"login__container\">\r\n             <img src= \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/200px-WhatsApp.svg.png\"\r\n             alt=\"\"/>\r\n            <div className=\"login__test\">\r\n                <h1>Sign in to WhatsApp</h1>\r\n            </div>\r\n            <Button  onClick={signIn}>\r\n                Sign In with Google\r\n            </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React, {useEffect , useState} from 'react';\r\nimport './SidebarChat.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport db from './firebase';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id,name, addNewChat }) {\r\n   \r\n    const [messages,setMessages] = useState (\"\");\r\n    useEffect(() => {\r\n        if (id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) =>\r\n                    doc.data()))\r\n            })\r\n        }\r\n    },[id]);\r\n    \r\n    const [seed, setSeed] =  useState('');\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000)); \r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt (\"Please enter the room name \");\r\n        \r\n        if (roomName) {\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to = {`/rooms/${id}`}>\r\n        <div className='sidebarChat'>\r\n            <Avatar src ={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n            <div className=\"sidebarChat__info\">\r\n                <h2>{name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n        \r\n    ) : (\r\n        <div onClick = {createChat}\r\n            className=\"sidebarChat\">\r\n                <h2>Add new chat</h2>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat","import React, {useEffect , useState} from 'react';\r\nimport './Sidebar.css'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport { Avatar , IconButton } from '@material-ui/core';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n   \r\n     const [{user},dispatch] = useStateValue();\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n       const unsubscribe =  db.collection('rooms').onSnapshot(snapshot =>(\r\n            setRooms(snapshot.docs.map(doc=>\r\n                ({\r\n                    id: doc.id,\r\n                    data:doc.data(),\r\n            })\r\n            \r\n            ))\r\n        ))\r\n       return()=>{\r\n           unsubscribe();\r\n       }\r\n    }, []);\r\n\r\n    return (\r\n        <div className = \"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n            <Avatar src = {user?.photoURL}/>\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/> \r\n                    </IconButton> \r\n                    <IconButton>\r\n                        <ChatIcon/> \r\n                    </IconButton> \r\n                    <IconButton>\r\n                        <MoreVertIcon/> \r\n                    </IconButton>   \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n            <div className=\"sidebar__searchContainer\">\r\n                   <SearchOutlined />\r\n                    <input placeholder=\"Search\" type=\"text\"/>\r\n                </div>\r\n            </div> \r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat/>\r\n               \r\n               {rooms.map(room=>(\r\n\r\n                  <SidebarChat key={room.id} id={room.id} name= {room.data.name}/> \r\n               ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{user}, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"You typed :\", input);\r\n    db.collection('rooms').doc(roomId).collection('messages').add({\r\n        message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>Last Seen{\" \"}\r\n          {new Date(\r\n                  messages[messages.length-1]?.\r\n                  timestamp?.toDate ()    \r\n              ).toLocaleDateString(('en-GB'),{hour: '2-digit',minute:'2-digit',hour12:'true'})}\r\n          </p>\r\n        </div>\r\n        <div className=\"chatheaderRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`}>\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timestamp\">\r\n            {message.timestamp?.toDate().toLocaleDateString(('en-GB'),{hour: '2-digit',minute:'2-digit',hour12:'true'})}\r\n          \r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <IconButton>\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send\r\n          </button>\r\n        </form>\r\n        <IconButton>\r\n          <MicIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","import React, { useState} from 'react';\nimport Login from './Login';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useStateValue } from './StateProvider';\n\n\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n        {!user ? (\n         <Login/>\n        ) : (\n          <div className=\"app__body\">\n          <Router>\n          <Sidebar />\n            <Switch>\n            \n              <Route path=\"/rooms/:roomId\">\n  \n  \n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                {/* <Chat /> */}\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n        )\n      \n      }\n\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import * as ServiceWorker from './serviceWorker';\nimport reducer, {initialState} from './reducer';\nimport {StateProvider} from './StateProvider'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState = {initialState} reducer = {reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}